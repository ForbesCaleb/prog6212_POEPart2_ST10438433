@model POE_Part2_PROG6212.Models.LoginViewModel
@{
    ViewData["Title"] = "Sign in";

    // role from controller: lecturer | pc1 | am1
    var role = (ViewBag.Role as string ?? "").ToLowerInvariant();

    // Accent color + title per role
    string accent = role switch
    {
        "lecturer" => "#5e60ce",            // purple
        "pc1" or "coordinator" => "#0ea5e9",// sky
        "am1" or "manager" => "#22c55e",    // green
        _ => "#0d6efd"                      // default blue
    };
    string title = role switch
    {
        "lecturer" => "Lecturer Sign in",
        "pc1" or "coordinator" => "Programme Coordinator Sign in",
        "am1" or "manager" => "Academic Manager Sign in",
        _ => "Sign in"
    };
}

@section Styles {
    <style>
        :root {
            --accent: @accent;
        }

        .login-wrap {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            background: radial-gradient(1200px 600px at 10% -10%, rgba(255,255,255,.25), transparent 60%), radial-gradient(1200px 600px at 110% 110%, rgba(255,255,255,.15), transparent 60%), linear-gradient(135deg, var(--accent) 0%, #0f172a 100%);
            padding: 2rem;
        }

        .glass {
            background: rgba(255,255,255,.08);
            border: 1px solid rgba(255,255,255,.18);
            color: #fff;
            backdrop-filter: blur(10px);
            border-radius: 1rem;
            box-shadow: 0 .75rem 2rem rgba(0,0,0,.25);
        }

        .panel {
            background: #fff;
            border-radius: 1rem;
            box-shadow: 0 .5rem 1.25rem rgba(0,0,0,.12);
        }

        .brand-badge {
            background: rgba(255,255,255,.2);
            padding: .25rem .6rem;
            border-radius: 999px;
        }

        .role-chip a {
            text-decoration: none;
            color: #fff;
            opacity: .8;
            padding: .25rem .6rem;
            border-radius: .75rem;
            border: 1px solid rgba(255,255,255,.35);
        }

            .role-chip a.active {
                opacity: 1;
                background: rgba(255,255,255,.2);
            }

        .hint {
            color: #e5e7eb;
        }

        .btn-accent {
            background: var(--accent);
            border-color: var(--accent);
        }

            .btn-accent:hover {
                filter: brightness(1.07);
            }

        .form-text {
            color: #6b7280 !important;
        }
    </style>
}

<div class="login-wrap">
    <div class="container" style="max-width: 980px;">
        <div class="row g-0 align-items-stretch">
            <!-- Left: brand / context -->
            <div class="col-lg-6 p-4 glass">
                <div class="d-flex align-items-center gap-2 mb-3">
                    <span class="brand-badge">CMCS</span>
                    <span class="small">Contract Monthly Claim System</span>
                </div>

                <h2 class="fw-bold mb-2">@title</h2>
                <p class="hint mb-3">
                    Secure sign in for your role. For the demo environment, the <strong>password = username</strong>.
                </p>

                <!-- Quick role switcher -->
                <div class="d-flex gap-2 role-chip">
                    <a class="@(role == "lecturer" ? "active" : "")"
                       asp-controller="Auth" asp-action="Login" asp-route-role="lecturer">Lecturer</a>
                    <a class="@(role == "pc1" ? "active" : "")"
                       asp-controller="Auth" asp-action="Login" asp-route-role="pc1">Coordinator</a>
                    <a class="@(role == "am1" ? "active" : "")"
                       asp-controller="Auth" asp-action="Login" asp-route-role="am1">Manager</a>
                </div>

                <hr class="border-light opacity-25 my-4" />

                <ul class="list-unstyled small m-0">
                    <li>• Submit & track claims (Lecturer)</li>
                    <li>• Review & approve (Programme Coordinator)</li>
                    <li>• Oversight & decisions (Academic Manager)</li>
                </ul>

                <div class="mt-4 small">
                    <a class="text-white text-decoration-underline" asp-controller="Home" asp-action="About">Learn more about CMCS</a>
                </div>
            </div>

            <!-- Right: form -->
            <div class="col-lg-6 p-4 panel">
                <form asp-action="Login" method="post" novalidate>
                    @Html.AntiForgeryToken()
                    <input type="hidden" asp-for="ReturnUrl" />

                    <div class="mb-3">
                        <label class="form-label">Username</label>
                        <input asp-for="Username" class="form-control form-control-lg"
                               value="@Model.Username" placeholder="e.g. lecturer / pc1 / am1" />
                        <span asp-validation-for="Username" class="text-danger small"></span>
                    </div>

                    <div class="mb-2">
                        <label class="form-label">Password</label>
                        <input asp-for="Password" type="password" class="form-control form-control-lg" placeholder="••••••••" />
                        <span asp-validation-for="Password" class="text-danger small"></span>
                        <div class="form-text">Demo tip: try <code>@(string.IsNullOrWhiteSpace(Model.Username) ? "lecturer" : Model.Username)</code> / same as username</div>
                    </div>

                    <div class="form-check my-3">
                        <input class="form-check-input" asp-for="RememberMe" />
                        <label class="form-check-label" asp-for="RememberMe">Remember me</label>
                    </div>

                    <button class="btn btn-accent btn-lg w-100 mb-2">Sign in</button>
                    <a asp-controller="Home" asp-action="Index" class="btn btn-outline-secondary w-100">Back to Welcome</a>

                    @if (!ViewData.ModelState.IsValid)
                    {
                        <div class="alert alert-danger mt-3">
                            @foreach (var e in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                            {
                                <div>@e.ErrorMessage</div>
                            }
                        </div>
                    }
                </form>

                <!-- Demo role shortcuts -->
                <div class="border rounded p-3 mt-4 small">
                    <div class="fw-semibold mb-2" style="color: var(--accent);">Quick Demo</div>
                    <div class="d-flex flex-wrap gap-2">
                        <a class="btn btn-sm btn-outline-primary" asp-controller="Auth" asp-action="Login" asp-route-role="lecturer">Use Lecturer</a>
                        <a class="btn btn-sm btn-outline-info" asp-controller="Auth" asp-action="Login" asp-route-role="pc1">Use Coordinator</a>
                        <a class="btn btn-sm btn-outline-success" asp-controller="Auth" asp-action="Login" asp-route-role="am1">Use Manager</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

